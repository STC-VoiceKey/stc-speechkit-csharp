/* 
 * ASR documentation
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Cloud.ASR.Client.SwaggerDateConverter;

namespace Cloud.ASR.Model
{
    /// <summary>
    /// RecognitionRequestDto
    /// </summary>
    [DataContract]
    public partial class RecognitionRequestDto :  IEquatable<RecognitionRequestDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RecognitionRequestDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected RecognitionRequestDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="RecognitionRequestDto" /> class.
        /// </summary>
        /// <param name="Audio">Audio file data and description (required).</param>
        /// <param name="PackageId">Recognize with package.</param>
        public RecognitionRequestDto(AudioFileDto Audio = default(AudioFileDto), string PackageId = default(string))
        {
            // to ensure "Audio" is required (not null)
            if (Audio == null)
            {
                throw new InvalidDataException("Audio is a required property for RecognitionRequestDto and cannot be null");
            }
            else
            {
                this.Audio = Audio;
            }
            this.PackageId = PackageId;
        }
        
        /// <summary>
        /// Audio file data and description
        /// </summary>
        /// <value>Audio file data and description</value>
        [DataMember(Name="audio", EmitDefaultValue=false)]
        public AudioFileDto Audio { get; set; }

        /// <summary>
        /// Recognize with package
        /// </summary>
        /// <value>Recognize with package</value>
        [DataMember(Name="package_id", EmitDefaultValue=false)]
        public string PackageId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class RecognitionRequestDto {\n");
            sb.Append("  Audio: ").Append(Audio).Append("\n");
            sb.Append("  PackageId: ").Append(PackageId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RecognitionRequestDto);
        }

        /// <summary>
        /// Returns true if RecognitionRequestDto instances are equal
        /// </summary>
        /// <param name="input">Instance of RecognitionRequestDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RecognitionRequestDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Audio == input.Audio ||
                    (this.Audio != null &&
                    this.Audio.Equals(input.Audio))
                ) && 
                (
                    this.PackageId == input.PackageId ||
                    (this.PackageId != null &&
                    this.PackageId.Equals(input.PackageId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Audio != null)
                    hashCode = hashCode * 59 + this.Audio.GetHashCode();
                if (this.PackageId != null)
                    hashCode = hashCode * 59 + this.PackageId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
